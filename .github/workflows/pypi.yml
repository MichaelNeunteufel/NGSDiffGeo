name: Build and upload to PyPI

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13]
        cibw_build: 
          - cp39-* cp310-* cp311-* cp312-* cp313-*
        include:
          - os: windows-2022
            cibw-arch: AMD64
            cmake-generator: "Visual Studio 17 2022"
            cmake_generator_platform: "x64"
            cibw_build: cp39-* cp310-* cp311-* cp312-* cp313-*
    env:
      CIBW_BUILD: ${{ matrix.cibw_build }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{  github.ref_name }}
          fetch-tags: 'true'
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.0

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{  github.ref_name }}
          fetch-tags: 'true'
          fetch-depth: 0

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: testpypi
    permissions:
      id-token: write
    # if: github.event_name == 'release' && github.event.action == 'published'
    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    if: github.ref_type == 'tag'
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true
          
      - uses: actions/download-artifact@v4
        with:
          name: cibw-sdist
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          skip-existing: true
          # password: ${{ secrets.PYPI_API_TOKEN_2 }}
          # To test: repository-url: https://test.pypi.org/legacy/

  docs:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]
    container: python:3.12
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
          submodules: true
          path: "NGSDiffGeo"
      - name: Install dependencies
        run: |
          apt update -y && DEBIAN_FRONTEND="noninteractive" apt install -y git pandoc
          python -m pip install --upgrade pip
          pip install -r $GITHUB_WORKSPACE/NGSDiffGeo/docs/requirements.txt
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-wheels-ubuntu*
          path: wheels
          merge-multiple: true

      - name: List wheel files
        run: |
          ls -R $GITHUB_WORKSPACE/wheels
      - name: install ngsdiffgeo
        run: pip install $GITHUB_WORKSPACE/wheels/*-cp312-cp312-manylinux_2_28_x86_64.manylinux2014_x86_64.whl

      - name: Build docs with Sphinx
        working-directory: NGSDiffGeo/docs
        run: |
          make html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: NGSDiffGeo/docs/_build/html